1:5
cumsum(1:5)
q()
install.packages(c("car", "caTools", "digest", "evaluate", "fansi", "foreign", "glue", "httpuv", "igraph", "later", "lme4", "maptools", "openssl", "pkgconfig", "Rcpp", "RCurl", "rlang", "scales", "stringi", "tinytex", "xtable", "yaml"))
install.packages(c("car", "caTools", "digest", "evaluate", "fansi", "foreign", "glue", "httpuv", "igraph", "later", "lme4", "maptools", "openssl", "pkgconfig", "Rcpp", "RCurl", "rlang", "scales", "stringi", "tinytex", "xtable", "yaml"))
q()
install.packages('ymal')
install.packages('Rcpp')
q()
library(ggplot2)
install.packages('scales')
library(ggplot2)
install.packages('rlang')
library(ggplot2)
install.packages('yaml')
swirl()
library(swirl)
swirl()
dice_sqr
q()
data (sleep)
sleep
q()
library(UsingR)
data("father.son")
t.test(father.son$sheight - father.son$fheight)
t.test(father.son$sheight > father.son$fheight)
t.test(father.son$sheight < father.son$fheight)
t.test(sheight ~ fheight, data=father.son)
pt(2.5,15)
?qt
qt(0.975, df=9, lower.tail = F)
pt(0.975, df=9, lower.tail = F)
pt(0.975, df=9)
pt(0.975, df=8, lower.tail = F)
qt(0.975, df=8, lower.tail = F)
pt(0.95, df=8, lower.tail = F)
pt(0.95, df=9, lower.tail = F)
pt(0.95, df=9)
pt(0.95, df=8)
pt(0.975, df=8)
dt(0.975, df=8)
qt(0.95, 15)
qt(0.95, 9)
qt(0.975, 9)
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
?I
ls()
fit<-lm(child ~ parent, galton)
0
info()
bye()
fit<-lm(child~parent, galton)
summary(fit)
q()
n=100;x=rnorm(n)
x2=rnorm(n)
x3=rnorm(n)
n
x
plot(x,x2)
y=1+x+x2+x3+rnorm(n,sd=0.1)
y
plot(y,x)
plot(xmy)
plot(x,y)
plot(x2,y)
plot(x3,y)
plot(x1,y)
plot(x,y)
?plot
lm(y~x2+x3)
resid(lm(y~x2+x3))
ey=resid(lm(y~x2+x3))
ex=resid(lm(x~x2+x3))
lm(ey~ex -1)
lm(y ! x+x2+x3)
lm(y ~ x+x2+x3)
lm(y ~ x)
lm(y ~ x2)
summary(lm(y ~ x2))
summary(lm(y ~ x+x2))
vif(lm(y ~ x+x2))
?vif
library(car)
vif(lm(y ~ x+x2))
vif(lm(y ~ x+x2+x3))
data(FC)
pairs(data.frame(y,x))
pairs(data.frame(y,x,x2,x3))
cor(data.frame(y,x,x2,x3))
?pairs
pairs(data.frame(y,x,x2,x3))
?subset
pairs.panels
library(Hmisc)
library(psych)
library(car)
install.packages('psych')
library(psych)
pairs.panels(data.frame(y,x1,x2,x))
pairs.panels(data.frame(y,x3,x2,x))
q()
?sample.int
g1
hmean
trx
?sample.int
sample.int(seq(1,10))
sample.int(seq(1,10),2)
seq(1, 10)
sample.int(seq(1,10),3)
sample.int(seq(1,10))
sample.int(seq(1,10))
sample.int(seq(1,10))
sample.int(seq(1,10))
sample.int(seq(1,10))
sample.int(seq(1,10),100)
sample.int(c(0,1),2)
sample(c(0,1),2)
sample(c(0,1),2)
sample(c(0,1,3),2)
sample(seq(1,10),100)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,10),3)
sample(seq(1,length(trx)),3)
sample(seq(1,length(trx)),3)
sample(seq(1,length(trx)),3)
sample(seq(1,length(trx)),3)
length(trx)
dim(trx)
dim(trx)[1]
sample(seq(1,dim(trx)[1],3)
sample(seq(1,dim(trx)[1]),3)
sample(seq(1,dim(trx)[1]),3)
sample(seq(1,dim(trx)[1]),30)
trx[sample(seq(1,dim(trx)[1]),30),]
trx[sample(seq(1,dim(trx)[1]),30),]
install.packages('plot3D')
library('plot3D')
data("iris")
head(iris)
x <- sep.l <- iris$Sepal.Length
y <- pet.l <- iris$Petal.Length
z <- sep.w <- iris$Sepal.Width
x
y
z
scatter3D(x, y, z, ..., colvar = z, col = NULL, add = FALSE)
scatter3D(x, y, z, clab = c("Sepal", "Width (cm)"))
install.packages("rgl")
library(rgl)
library(car)
?carData
?car
scatter3d(x = sep.l, y = pet.l, z = sep.w)
scatter3d(x = sep.l, y = pet.l, z = sep.w,
point.col = "blue", surface=FALSE)
scatter3d(x = sep.l, y = pet.l, z = sep.w, groups = iris$Species)
scatter3d(x = sep.l, y = pet.l, z = sep.w, groups = iris$Species,
grid = FALSE, fit = "smooth")
scatter3d(x = sep.l, y = pet.l, z = sep.w,
surface=FALSE, labels = rownames(iris), id.n=nrow(iris))
install.packages("shiny")
install.packages("shiny")
library(shiny)
runExample("01_hello")
mod<-lm(LungCap ~ Age)
attach(LunCapData)
LungCapData <- read.delim(file.choose(), header = T)
names(LungCapData)
attach(LungCapData)
plot(Age, LungCap)
cor(Age, LungCap)
mod <- lm (LungCap ~ Age)
summary(mod)
attributes(mod)
mod$coefficients
mod$coef
coef(mod)
abline(mod)
confint(mod)
confint(mod, level = 0.99)
anova(mod)
q()
pnorm(0.05)
pnorm(0.025)
pnorm(0.025, lower.tail = F)
pnorm(0.025, lower.tail = T)
?pnorm
q()
x <- 1:10
y <- x + c(-0.5,0.5)
plot(x,y, xlim=c(0,11), ylim=c(-1,12))
fit1 <- lm( y~offset(x) -1 )
fit2 <- lm( y~x )
fit3 <- lm( y~poly(x,3) )
fit4 <- lm( y~poly(x,9) )
library(splines)
fit5 <- lm( y~ns(x, 3) )
fit6 <- lm( y~ns(x, 9) )
fit7 <- lm( y ~ x + cos(x*pi) )
xx <- seq(0,11, length.out=250)
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
lines(xx, predict(fit2, data.frame(x=xx)), col='green')
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
lines(xx, predict(fit4, data.frame(x=xx)), col='purple')
lines(xx, predict(fit5, data.frame(x=xx)), col='orange')
lines(xx, predict(fit6, data.frame(x=xx)), col='grey')
lines(xx, predict(fit7, data.frame(x=xx)), col='black')
q()
install.packages(c("carData", "cli", "data.table", "digest", "htmlwidgets", "later", "maptools", "nloptr", "Rcpp", "rstudioapi", "webshot"))
install.packages(c("carData", "cli", "data.table", "digest", "htmlwidgets", "later", "maptools", "nloptr", "Rcpp", "rstudioapi", "webshot"))
install.packages(c("carData", "cli", "data.table", "digest", "htmlwidgets", "later", "maptools", "nloptr", "Rcpp", "rstudioapi", "webshot"))
install.packages(c("carData", "cli", "data.table", "digest", "htmlwidgets", "later", "maptools", "nloptr", "Rcpp", "rstudioapi", "webshot"))
install.packages("nloptr")
x <- c(1:100)
y <- seq(0.1,10,0.1)
x
y
plot(x,y)
plot(x^2,y)
plot(x^3,y)
plot(I(x^3),y)
plot(y~x)
plot(y~x^2)
plot(y~x^3)
plot(y~(x^3)
plot(y~I(x^3)
plot(y~I(x^3))
x^2
x:y
?I
data(trees)
trees
?trees
ggpairs
??ggpairs
??ggalls
??ggally
??GGally
install.packages('ggally')
install.packages('GGally')
library(GGally)
ggpairs(data=trees, columns = 1:3)
ggpairs(data=trees, columns = 2:3)
ggpairs(data=trees, columns = 1:2)
ggpairs(data=trees, columns = 1,2)
ggpairs(data=trees, columns = c(1,3))
ggpairs(data=trees)
data("mtcars")
ggpairs(mtcars)
head(trees)
ggpairs(data=trees)
fir<-lm(Volume ~ Girth, data=trees)
fit<-lm(Volume ~ Girth, data=trees)
rm(fir)
summary(fit)
fit$residuals
fit$residuals
hist(fit$residuals)
ggplot(fit$residuals)
ggplot(data=tree, aesfit$residuals))
ggplot(data=tree, aes(fit$residuals))
ggplot(data=trees, aes(fit$residuals))
ggplot(data=trees, aes(fit$residuals)) + geom_histogram()
ggplot(data=trees, aes(fit$residuals)) + geom_histogram(color="red",fill="blue")
ggplot(data=trees, aes(fit$residuals)) + geom_histogram(color="red",fill="blue", binwidth = 1)
ggplot(data=trees, aes(fit$residuals)) + geom_histogram(color="red",fill="blue", binwidth = 2)
ggplot(data=trees, aes(fit$residuals)) + geom_histogram(color="red",fill="blue", binwidth = 1)
ggplot(data = trees, aes(x = Girth, y = Volume)) + geom_point()  +
stat_smooth(method = "lm", col = "dodgerblue3")
ggplot(data = trees, aes(x = Girth, y = Volume)) + geom_point()  +
stat_smooth(method = "lm")
ggplot(data = trees, aes(x = Girth, y = Volume)) + geom_point()  +
stat_smooth(method = "glm")
ggplot(data = trees, aes(x = Girth, y = Volume)) + geom_point()  +
stat_smooth(method = "lm")
predict(fit, c(15,25))
predict(fit, newdata = c(15,25))
predict(fit, Girth = c(15,25))
predict(fit, Girth = 25)
predict(fit, data.frame(Girth = 18.2))
predict(fit, data.frame(Girth = c(15,18.2)))
fit_2 <- lm(Volume ~ Girth + Height, data = trees)
summary(fit_2)
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
plot(fit)
q()
?var
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y ~ x))
reqire(dataset)
require(datasets)
swiss
head(swiss)
lm(swiss$Fertility ~ swiss$Agriculture)
summary(lm(swiss$Fertility ~ swiss$Agriculture))
summary(lm(swiss$Fertility ~ Agriculture, data=swiss))
summary(lm(Fertility ~ Agriculture, data=swiss))
summary(lm(Fertility ~ Agriculture + Examination, data=swiss))
plot(swiss)
?plot
library(ggpairs)
??ggpairs
library(GGally)
ggpairs(data=swiss)
q()
?glm
q()
mtcars
fit<-lm(mpg ~ disp, mtcars)
summary(fit)
fit<-lm(mpg ~ disp + am, mtcars)
summary(fit)
summary(ln(mpg~hp + am, mtcars))
summary(lm(mpg~hp + am, mtcars))
library(ggplot2)
qqplot(mtcars, aes(x=hp, y=mpg)) + geom_point()
plot(mtcars$hp, mtcars$mpg)
qqplot(mtcars, aes(x=hp, y=mpg)) + geom_point(stat="identity")
qqplot(mtcars[, c("hp","mpg")], aes(x=hp, y=mpg)) + geom_point(stat="identity")
qqplot(mtcars, aes(hp,mpg)) + geom_point()
qqplot(mtcars, aes(wt,mpg)) + geom_point()
ggplot(mtcars, aes(wt, mpg, color = cyl)) + geom_point()
ggplot(mtcars, aes(wt, mpg, color = am)) + geom_point()
mtcars
ggplot(mtcars, aes(disp, mpg, color = am)) + geom_point()
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
mtcars$am <- factor(mtcars$am,levels=c(1,0),
labels=c("Automatic","Manual"))
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
mtcars
q()
bk<-mtcars
mtcars$am <- factor(mtcars$am,levels=c(1,0), labels = c("Auto","Manual")
)
mtcars
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8))
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
mtcars<-bk
mtcars$am <- factor(mtcars$am,levels=c(0,1), labels = c("Auto","Manual")
)
ggplot(mtcars, aes(hp, mpg, color = am)) + geom_point()
mtcars<bk
bk
mtcars <- bk
mtcars
plot(mtcars$am, mtcars$mpg)
plot(mtcars$am, mtcars$disp)
plot(mtcars$am, mtcars$hp)
plot(mtcars$disp, mtcars$hp)
plot(mtcars$wt, mtcars$hp)
plot(mtcars$wt, mtcars$disp)
plot(mtcars$wt, mtcars$am)
plot(mtcars$disp, mtcars$mpg)
plot(mtcars$hp, mtcars$mpg)
?mtcars
library(knitr)
plot(mtcars)
library(GGally)
ggpairs(mtcars)
plot(mpg,hp, data=mtcars)
?plot
plot(mpg~hp, data=mtcars)
ggpairs(mtcars)
plot(mpg~cyl, data=mtcars)
plot(cyl ~ mpg, data=mtcars)
cor(cyl ~ disp, data=mtcars)
?cor
cor(mtcars$disp, mtcars$hp)
?lm
q()
library(kableExtra)
install.packages(c("ggplot2", "mgcv", "reshape", "rlang", "tinytex", "xfun"))
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('GGally')
install.packages('knitr')
install.packages("knitr")
install.packages("leaps")
install.packages("plot3D")
install.packages("kableExtra")
library(ggplot2)
# ggplot2 has mpg
attach(mtcars)
getwd()
setwd("ProAssignment10/")
mod.sim <- lm(mpg ~ am, data = mtcars)
mod.mul <- lm(mpg ~ wt + qsec + am, data = mtcars)
summary(mod.sim)
#resid(mod1)
plot(density(resid(mod.sim)))
# A quantile normal plot - good for checking normality
qqnorm(resid(mod.sim))
qqline(resid(mod.sim))
plot(am, mpg)
abline(mod1)
# ANOVA
anova1 <- aov(mpg~am, data = mtcars)
summary(anova1)
f_crit <- round(qf(.95, 2, 30),2)
## qqplot
ggplot(data = mtcars, aes(x=am, y=mpg)) +
geom_point(aes(size=3, alpha=.4)) +
stat_smooth(method = "lm") +
ggtitle("simple linear regression between MPG and AM")
ggplot(data = mtcars, aes(mod.sim$residuals)) +
geom_histogram(color='black', fill='white', aes(y=..density..) ) +
geom_density(alpha=0.4, fill="grey") +
ggtitle("fit model residual density and histogram")
# multi variables
library(leaps)
# nbest: number of best subset in order
regsubsets.out <- regsubsets(mpg ~ ., data = mtcars, nbest = 2)
as.data.frame(summary(regsubsets.out)$outmat)
plot(regsubsets.out, scale="adjr2")
# lm sepreatly by AM, 2 regression lines
ggplot(data = mtcars, aes(x=wt, y=mpg, color=factor(am))) + geom_point(size =3, alpha =0.5) +
stat_smooth(method="lm") +
ggtitle("linear regression between MPG and WT factored by value of AM")
# model with mpg ~ hp, color with am
ggplot(data = mtcars, aes(x=wt, y=mpg)) + geom_point(size =3, alpha =0.5, aes(color=factor(am))) +
stat_smooth(method="lm") +
ggtitle("linear regression between MPG and WT+AM")
# comprae residual
se <- function(x) sqrt(var(x)/length(x))
par(mfrow=c(2,2))
res.range <- ceiling(max(sapply(list(mod.sim$residuals, mod.mul$residuals), range)))
plot(mod.sim$residuals, ylim = res.range * c(1,-1), main="simple", ylab = "variation")
abline(h=0)
plot(mod.mul$residuals, ylim = res.range * c(1,-1), main="multi", ylab = "variation")
abline(h=0)
hist(mod.sim$residuals, breaks = 30, main="simple", xlab = "variation")
hist(mod.mul$residuals, breaks = 30, main="multi", xlab = "variation")
mtext("figure 4, residuals", side = 1, outer = T, line = -3)
par(mfrow=c(1,1))
# 3D plot
library(plot3D)
# init grid size
grid.lines = 20
#  fill points in between min and max value of indenpent variables
x.pred <- seq(min(wt),max(wt), length.out = grid.lines)
y.pred <- seq(min(qsec),max(qsec), length.out = grid.lines)
# resize grid
xy <- expand.grid( x = x.pred, y = y.pred)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(
predict(mod.mul, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=0)),
nrow =grid.lines, ncol = grid.lines
)
z.manual.pred <- matrix(
predict(mod.mul, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=1)),
nrow =grid.lines, ncol = grid.lines
)
points.auto <- mtcars[mtcars$am == 0,]
points.manual <- mtcars[mtcars$am == 1,]
scatter3D(points.auto$wt, points.auto$qsec, points.auto$mpg,
ylim = c(10,30), zlim = c(0,45),
col = "blue",
colkey=F, pch=20, cex=2, alpha = 0.5,
phi = -5, theta = 40,
bty = "g", ticktype = "detailed",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA , col = "blue"),
main = "MPG with auto(blue) and manual(red)"
)
scatter3D(points.manual$wt, points.manual$qsec, points.manual$mpg,
col = "red", alpha = 0.5,
pch=20, ticktpe = "detailed", cex=2 ,
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA , col = "red"),
add = T
)
knit_with_parameters('C:/Users/zhang/Desktop/R/ProAssignment10/mpg_am.Rmd')
install.packages("printr")
mod.sim$coefficients
cor.test(mpg,am,alternative = "greater")
cort<-cor.test(mpg,am,alternative = "greater")
summary(cort)
attitude(cort)
attitudes(cort)
attributes(cort)
cort$p.value
cort$p.value
cort$statistic
cort$conf.int
q()
