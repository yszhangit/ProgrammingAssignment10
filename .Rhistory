?cor.test
cor.test(mtcars$mpg, mtcars$am, alternative = "two.sided")
cor.test(mtcars$mpg, mtcars$am, alternative = "greater")
cor.test(mtcars$mpg, mtcars$am, alternative = "less")
cor.test(mtcars$mpg, mtcars$am, alternative = "greater")
head(mtcars)
library(scatterplot3d)
scatterplot3d(mtcars)
par(mfrow=c(1,1))
scatterplot3d(mtcars)
scatterplot3d(mtcars[,c("mpg","am","qsec")])
scatterplot3d(mtcars[,c("mpg","wt","qsec")])
library(plotly)
install.packages('plotly')
libaray(plotly)
library(plotly)
?add_surface
ploy_ly() %>% add_surface(x= ~mtcars$wt, y = ~mtcars$qsec, z = ~mtcars$mpg)
plot_ly() %>% add_surface(x= ~mtcars$wt, y = ~mtcars$qsec, z = ~mtcars$mpg)
scatterplot3d(wt,disp,mpg, main="3D Scatterplot")
attach(mtcars)
scatterplot3d(wt,disp,mpg, main="3D Scatterplot")
library(rgl)
plot3d(wt, disp, mpg, col="red", size=3)
library(Rcmdr)
attach(mtcars)
scatter3d(wt, disp, mpg)
install.packages('Rcmdr')
s3d <-scatterplot3d(wt,disp,mpg, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+disp)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,disp,mpg, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,disp,qsec, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,qsec,mpg pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,qsec,mpg, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,qsec,mpg, pch=16, color = factor(am),
type="h", main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,qsec,mpg, pch=16, color = factor(am), main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
s3d <-scatterplot3d(wt,qsec,mpg, pch=16, main="3D Scatterplot")
fit <- lm(mpg ~ wt+qsec)
s3d$plane3d(fit)
library(plot3D)
?attach
am
scatter3D(wt,qsec,mpg)
scatter3D(wt,qsec,mpg, col = am)
scatter3D(wt,qsec,mpg, col = factor(am))
scatter3D(wt,qsec,mpg, col = factor(am), colkey=F)
scatter3D(wt,qsec,mpg, col = am, colkey=F)
amf <- factor(am)
amf <- factor(am, levels = c(1,0), labels = c('manual','auto'))
scatter3D(wt,qsec,mpg, col = amf, colkey=F)
amf <- factor(am, levels = c(1,2), labels = c('manual','auto'))
amf <- factor(am, levels = c(1,0), labels = c('manual','auto'))
amf
scatter3D(wt,qsec,mpg, col = amf, colkey=F)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, CI =Ci)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, CI =CI)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =20)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =40)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =0)
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =0, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =0, theta = 15, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=30, phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=3 , phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=1 , phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g", ticktype="detailed")
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g", )
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g", )
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g" )
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g", xlab ="wt", ylab="qsec",ylab="mpg" )
scatter3D(wt,qsec,mpg, col = amf, colkey=F, pch=20, cex=2 , phi =0, theta = 10, bty = "g", xlab ="wt", ylab="qsec",zlab="mpg" )
grid.lines = 26
x.pred <- seq(min(wt),max(wt), length.out = grid.lines)
#  fill points in between min and max value of indenpent variables
x.pred <- seq(min(wt),max(wt), length.out = grid.lines)
y.pred <- seq(min(qsec),max(qsec), length.out = grid.lines)
# resize grid
xy <- expend.grid( x = x.pred, y = y.pred)
# resize grid
xy <- expand.grid( x = x.pred, y = y.pred)
# z value by prediction
z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
# droplines to surface
fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.pred,
facets = NA, fit = fitpoints),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.pred, facets = NA ),
main = "mtcars"
)
# z value by prediction
z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
xy
head(xy)
# resize grid
xy.auto <- cbind(expand.grid( x = x.pred, y = y.pred), rep(1, length(x.pred))a)
# resize grid
xy.auto <- cbind(expand.grid( x = x.pred, y = y.pred), rep(1, length(x.pred)))
xy.auto
head(xy.auto)
?cbind
# resize grid
xy.auto <- cbind(expand.grid( x = x.pred, y = y.pred), am = rep(1, length(x.pred)))
head(xy.auto)
# resize grid
xy.manual <- cbind(expand.grid( x = x.pred, y = y.pred), am = rep(0, length(x.pred)))
head(xy.manual)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = xy.auto), nrow =grid.lines, ncol = grid.lines)
z.manual.pred <- matrix(predict(mod2, newdata = xy.manual), nrow =grid.lines, ncol = grid.lines)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
summary(mod2)
predict(mod2, newdata = xy.manual), nrow =grid.lines, ncol = grid.lines
predict(mod2, newdata = xy.manual), nrow =grid.lines, ncol = grid.lines)
predict(mod2, newdata = xy.manual)
expand.grid( x = x.pred, y = y.pred)
x.pred
# resize grid
xy.auto <- expand.grid( x = x.pred, y = y.pred)
xy.auto <- cbind(xy.auto, am = rep(1, length(xy.auto)))
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = xy.auto), nrow =grid.lines, ncol = grid.lines)
# resize grid
xy <- expand.grid( x = x.pred, y = y.pred)
mod2
mod3 <- lm(mpg ~ wt + qsec + factor(am), data=mtcars)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod3, newdata = xy.auto), nrow =grid.lines, ncol = grid.lines)
xy.manual <- cbind(expand.grid( x = x.pred, y = y.pred), am = rep(factor(0), length(x.pred)))
xy.auto <- cbind(xy.auto, am = rep(factor(1), length(xy.auto)))
xy.auto <- cbind(xy.auto, am = factor(rep(1, length(xy.auto)))
xy.auto <- cbind(xy.auto, am = factor(rep(1, length(xy.auto))))
xy.auto <- expand.grid( x = x.pred, y = y.pred)
xy.auto <- cbind(xy.auto, am = factor(rep(1, length(xy.auto))))
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = xy.auto), nrow =grid.lines, ncol = grid.lines)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod3, newdata = xy.auto), nrow =grid.lines, ncol = grid.lines)
dom3
mod3
summary(mod3)
predict(mod3, newdata = data.frame(wt=10, qsec=10, am =1))
str(xy.auto)
predict(mod3, newdata = data.frame(wt=10, qsec=10, am =1))
predict(mod3, newdata = xy.auto)
predict(mod3, newdata = data.frame(1,11))
predict(mod3, newdata = data.frame(1,1,1))
predict(mod3, newdata = data.frame(wt=10, qsec=10, am =1))
predict(mod3, newdata = data.frame(wt=10, qsec=10, am =0))
predict(mod3, newdata = data.frame(wt=10, qsec=20, am =0))
predict(mod3, newdata = data.frame(wt=1, qsec=20, am =0))
predict(mod3, newdata = data.frame(wt=2, qsec=20, am =0))
predict(mod3, newdata = data.frame(wt=2, qsec=10, am =0))
predict(mod3, newdata = data.frame(wt=2, qsec=10, am =1))
predict(mod3, newdata = data.frame(wt=c(1,2), qsec=10, am =1))
predict(mod3, newdata = data.frame(wt=c(1,2), qsec=c(10,11), am =1))
data.frame(xy, am=1)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = data.frame(xy, am=1), nrow =grid.lines, ncol = grid.lines)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = data.frame(xy, am=1), nrow =grid.lines, ncol = grid.lines))
z.manual.pred <- matrix(predict(mod2, newdata = data.frame(xy, am=0)), nrow =grid.lines, ncol = grid.lines)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod2, newdata = data.frame(xy, am=1), nrow =grid.lines, ncol = grid.lines))
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod3, newdata = data.frame(xy, am=1), nrow =grid.lines, ncol = grid.lines))
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod3, newdata = data.frame(xy, 1), nrow =grid.lines, ncol = grid.lines))
z.manual.pred <- matrix(predict(mod2, newdata = data.frame(xy, 0)), nrow =grid.lines, ncol = grid.lines)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(predict(mod3, newdata = data.frame(xy, am=1), nrow =grid.lines, ncol = grid.lines))
data.frame(xy)
data.frame(xy,1)
data.frame(xy,0)
predict(mod3, newdata=data.frame(xy, am=1))
predict(mod3, newdata=data.frame(xy, 1))
predict(mod3, newdata=data.frame(xy, 1)[1,])
predict(mod3, newdata=data.frame(xy, 1))
predict(mod3, newdata=data.frame(xy))
head(xy)
test <- data.frame(xy,am=1)
head(test)
View(xy)
predict(mod3, newdata=test)
predict(mod2, newdata=test)
summary(mod2)
summary(mod3)
predict(mod2, newdata=data.frame(1,1,1))
predict(mod2, newdata=test[1,])
predict(mod2, newdata=test[,1])
test[1,]
test[1,]
predict(mod2, newdata=test[1,])
predict.lm(mod2, newdata=test[1,])
predict.lm(mod2, newdata=data.frame(wt=x.pred, qsec=y.pred, am =1))
predict.lm(mod2, newdata=data.frame(wt=xy$x, qsec=xy$y, am =1))
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(
predict(mod2, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=1)),
nrow =grid.lines, ncol = grid.lines
)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(
predict(mod2, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=1)),
nrow =grid.lines, ncol = grid.lines
)
z.manual.pred <- matrix(
predict(mod2, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=0)),
nrow =grid.lines, ncol = grid.lines
)
#plot
scatter3D(wt,qsec,mpg,
col = amf, colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA ),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA ),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =0, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
# init grid size
grid.lines = 20
#  fill points in between min and max value of indenpent variables
x.pred <- seq(min(wt),max(wt), length.out = grid.lines)
y.pred <- seq(min(qsec),max(qsec), length.out = grid.lines)
# resize grid
xy <- expand.grid( x = x.pred, y = y.pred)
# z value by prediction
#z.pred <- matrix(predict(mod2, newdata = xy), nrow =grid.lines, ncol = grid.lines)
z.auto.pred <- matrix(
predict(mod2, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=1)),
nrow =grid.lines, ncol = grid.lines
)
z.manual.pred <- matrix(
predict(mod2, newdata = data.frame(
wt = xy$x,
qsec = xy$y,
am=0)),
nrow =grid.lines, ncol = grid.lines
)
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
library(rgl)
scatter3D(wt, qsec, mpg)
library("scatterplot3d")
scatter3d(wt, qsec, mpg)
??cars
??car
library(car)
scatter3d(wt, qsec, mpg)
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=c(z.auto.pred,z.manual.pred)
, facets = NA ),
main = "mtcars"
)
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA ),
main = "mtcars"
)
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA , color = "red"),
main = "mtcars"
)
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA , color = "red"),
main = "mtcars"
)
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA , col = "red"),
main = "mtcars"
)
?scatter3D
?plot3d
open3d()
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
?scatter3d
?scatter3D
open3d()
open2d
open3d(4)
library(plot_ly)
install.packages('plotly')
install.packages('plotly')
library(plotly)
packageVersion('plotly')
par("mar")
par("mar")
mar1 <- par("mar")
# droplines to surface
#fitpoints <- predict(mod2)
#plot
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.auto.pred, facets = NA ),
main = "mtcars"
)
scatter3D(wt,qsec,mpg,
col= "blue", colkey=F, pch=20, cex=2 ,
phi =-10, theta = 10,
bty = "g",
xlab ="wt", ylab="qsec",zlab="mpg",
surf = list(x = x.pred, y = y.pred, z=z.manual.pred, facets = NA , col = "red"),
main = "mtcars"
)
par(mar = mar1)
par("mar")
mar1
par(mar = par("mar"))
par(mar = mar1)
q()
